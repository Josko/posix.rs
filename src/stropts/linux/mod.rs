pub use self::arch::{t_scalar_t};
pub use self::arch::{t_uscalar_t};
pub use self::arch::{bandinfo};
pub use self::arch::{strbuf};
pub use self::arch::{strpeek};
pub use self::arch::{strfdinsert};
pub use self::arch::{strioctl};
pub use self::arch::{strrecvfd};
pub use self::arch::{str_mlist};
pub use self::arch::{str_list};
pub use self::arch::{I_ATMARK};
pub use self::arch::{I_CANPUT};
pub use self::arch::{I_CKBAND};
pub use self::arch::{I_FDINSERT};
pub use self::arch::{I_FIND};
pub use self::arch::{I_FLUSH};
pub use self::arch::{I_FLUSHBAND};
pub use self::arch::{I_GETBAND};
pub use self::arch::{I_GETCLTIME};
pub use self::arch::{I_GETSIG};
pub use self::arch::{I_GRDOPT};
pub use self::arch::{I_GWROPT};
pub use self::arch::{I_LINK};
pub use self::arch::{I_LIST};
pub use self::arch::{I_LOOK};
pub use self::arch::{I_NREAD};
pub use self::arch::{I_PEEK};
pub use self::arch::{I_PLINK};
pub use self::arch::{I_POP};
pub use self::arch::{I_PUNLINK};
pub use self::arch::{I_PUSH};
pub use self::arch::{I_RECVFD};
pub use self::arch::{I_SENDFD};
pub use self::arch::{I_SETCLTIME};
pub use self::arch::{I_SETSIG};
pub use self::arch::{I_SRDOPT};
pub use self::arch::{I_STR};
pub use self::arch::{I_SWROPT};
pub use self::arch::{I_UNLINK};
pub use self::arch::{FMNAMESZ};
pub use self::arch::{FLUSHR};
pub use self::arch::{FLUSHRW};
pub use self::arch::{FLUSHW};
pub use self::arch::{S_BANDURG};
pub use self::arch::{S_ERROR};
pub use self::arch::{S_HANGUP};
pub use self::arch::{S_HIPRI};
pub use self::arch::{S_INPUT};
pub use self::arch::{S_MSG};
pub use self::arch::{S_OUTPUT};
pub use self::arch::{S_RDBAND};
pub use self::arch::{S_RDNORM};
pub use self::arch::{S_WRBAND};
pub use self::arch::{S_WRNORM};
pub use self::arch::{RS_HIPRI};
pub use self::arch::{RMSGD};
pub use self::arch::{RMSGN};
pub use self::arch::{RNORM};
pub use self::arch::{RPROTDAT};
pub use self::arch::{RPROTDIS};
pub use self::arch::{RPROTNORM};
pub use self::arch::{SNDZERO};
pub use self::arch::{ANYMARK};
pub use self::arch::{LASTMARK};
pub use self::arch::{MORECTL};
pub use self::arch::{MOREDATA};
pub use self::arch::{MSG_ANY};
pub use self::arch::{MSG_BAND};
pub use self::arch::{MSG_HIPRI};

#[cfg(target_arch = "x86_64")]
#[path = "x86_64.rs"]
mod arch;

#[cfg(target_arch = "x86")]
#[path = "x86.rs"]
mod arch;
