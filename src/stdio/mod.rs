pub use self::os::{FILE};
pub use self::os::{fpos_t};
pub use self::os::{BUFSIZ};
pub use self::os::{L_ctermid};
pub use self::os::{L_tmpnam};
pub use self::os::{_IOFBF};
pub use self::os::{_IOLBF};
pub use self::os::{_IONBF};
pub use self::os::{SEEK_CUR};
pub use self::os::{SEEK_END};
pub use self::os::{SEEK_SET};
pub use self::os::{FILENAME_MAX};
pub use self::os::{FOPEN_MAX};
pub use self::os::{TMP_MAX};
pub use self::os::{EOF};
pub use self::os::{stdin};
pub use self::os::{stdout};
pub use self::os::{stderr};

#[cfg(target_os = "linux")]
#[path = "linux/mod.rs"]
mod os;

extern "C" {
    pub fn clearerr(stream: *mut FILE);
    pub fn ctermid(s: *mut ::char_t) -> *mut ::char_t;
    pub fn dprintf(fd: ::int_t, fmt: *const ::char_t, ...) -> ::int_t;
    pub fn fclose(stream: *mut FILE) -> ::int_t;
    pub fn fdopen(fd: ::int_t, modes: *const ::char_t) -> *mut FILE;
    pub fn feof(stream: *mut FILE) -> ::int_t;
    pub fn ferror(stream: *mut FILE) -> ::int_t;
    pub fn fflush(stream: *mut FILE) -> ::int_t;
    pub fn fgetc(stream: *mut FILE) -> ::int_t;
    pub fn fgetpos(stream: *mut FILE, pos: *mut fpos_t) -> ::int_t;
    pub fn fgets(s: *mut ::char_t, n: ::int_t, stream: *mut FILE) -> *mut ::char_t;
    pub fn fileno(stream: *mut FILE) -> ::int_t;
    pub fn flockfile(stream: *mut FILE);
    pub fn fmemopen(s: *mut ::void_t, len: ::size_t, modes: *const ::char_t) -> *mut FILE;
    pub fn fopen(filename: *const ::char_t, modes: *const ::char_t) -> *mut FILE;
    pub fn fprintf(stream: *mut FILE, format: *const ::char_t, ...) -> ::int_t;
    pub fn fputc(c: ::int_t, stream: *mut FILE) -> ::int_t;
    pub fn fputs(s: *const ::char_t, stream: *mut FILE) -> ::int_t;
    pub fn fread(ptr: *mut ::void_t, size: ::size_t, n: ::size_t, stream: *mut FILE) -> ::size_t;
    pub fn fread_unlocked(ptr: *mut ::void_t, size: ::size_t, n: ::size_t, stream: *mut FILE) -> ::size_t;
    pub fn freopen(filename: *const ::char_t, modes: *const ::char_t, stream: *mut FILE) -> *mut FILE;
    pub fn fscanf(stream: *mut FILE, format: *const ::char_t, ...) -> ::int_t;
    pub fn fseeko(stream: *mut FILE, off: ::sys::types::off_t, whence: ::int_t) -> ::int_t;
    pub fn fseek(stream: *mut FILE, off: ::long_t, whence: ::int_t) -> ::int_t;
    pub fn fsetpos(stream: *mut FILE, pos: *const fpos_t) -> ::int_t;
    pub fn ftello(stream: *mut FILE) -> ::sys::types::off_t;
    pub fn ftell(stream: *mut FILE) -> ::long_t;
    pub fn ftrylockfile(stream: *mut FILE) -> ::int_t;
    pub fn funlockfile(stream: *mut FILE);
    pub fn fwrite(ptr: *const ::void_t, size: ::size_t, n: ::size_t, s: *mut FILE) -> ::size_t;
    pub fn getchar() -> ::int_t;
    pub fn getchar_unlocked() -> ::int_t;
    pub fn getc(stream: *mut FILE) -> ::int_t;
    pub fn getc_unlocked(stream: *mut FILE) -> ::int_t;
    pub fn getdelim(lineptr: *mut *mut ::char_t, n: *mut ::size_t, delimiter: ::int_t, stream: *mut FILE) -> ::size_t;
    pub fn getline(lineptr: *mut *mut ::char_t, n: *mut ::size_t, stream: *mut FILE) -> ::size_t;
    pub fn gets(s: *mut ::char_t) -> *mut ::char_t;
    pub fn getw(stream: *mut FILE) -> ::int_t;
    pub fn open_memstream(bufloc: *mut *mut ::char_t, sizeloc: *mut ::size_t) -> *mut FILE;
    pub fn pclose(stream: *mut FILE) -> ::int_t;
    pub fn perror(s: *const ::char_t);
    pub fn popen(command: *const ::char_t, modes: *const ::char_t) -> *mut FILE;
    pub fn printf(format: *const ::char_t, ...) -> ::int_t;
    pub fn putc(c: ::int_t, stream: *mut FILE) -> ::int_t;
    pub fn putchar(c: ::int_t) -> ::int_t;
    pub fn putchar_unlocked(c: ::int_t) -> ::int_t;
    pub fn putc_unlocked(c: ::int_t, stream: *mut FILE) -> ::int_t;
    pub fn puts(s: *const ::char_t) -> ::int_t;
    pub fn putw(w: ::int_t, stream: *mut FILE) -> ::int_t;
    pub fn remove(filename: *const ::char_t) -> ::int_t;
    pub fn renameat(oldfd: ::int_t, old: *const ::char_t, newfd: ::int_t, new: *const ::char_t) -> ::int_t;
    pub fn rename(old: *const ::char_t, new: *const ::char_t) -> ::int_t;
    pub fn rewind(stream: *mut FILE);
    pub fn scanf(format: *const ::char_t, ...) -> ::int_t;
    pub fn setbuf(stream: *mut FILE, buf: *mut ::char_t);
    pub fn setvbuf(stream: *mut FILE, buf: *mut ::char_t, modes: ::int_t, n: ::size_t) -> ::int_t;
    pub fn snprintf(s: *mut ::char_t, maxlen: ::size_t, format: *const ::char_t, ...) -> ::int_t;
    pub fn sprintf(s: *mut ::char_t, format: *const ::char_t, ...) -> ::int_t;
    pub fn sscanf(s: *const ::char_t, format: *const ::char_t, ...) -> ::int_t;
    pub fn tempnam(dir: *const ::char_t, pfx: *const ::char_t) -> *mut ::char_t;
    pub fn tmpfile() -> *mut FILE;
    pub fn tmpnam(s: *mut ::char_t) -> *mut ::char_t;
    pub fn ungetc(c: ::int_t, stream: *mut FILE) -> ::int_t;
}
