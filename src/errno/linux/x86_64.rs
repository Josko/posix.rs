pub static E2BIG:           ::int_t = 7;
pub static EACCES:          ::int_t = 13;
pub static EADDRINUSE:      ::int_t = 98;
pub static EADDRNOTAVAIL:   ::int_t = 99;
pub static EAFNOSUPPORT:    ::int_t = 97;
pub static EAGAIN:          ::int_t = 11;
pub static EALREADY:        ::int_t = 114;
pub static EBADF:           ::int_t = 9;
pub static EBADMSG:         ::int_t = 74;
pub static EBUSY:           ::int_t = 16;
pub static ECANCELED:       ::int_t = 125;
pub static ECHILD:          ::int_t = 10;
pub static ECONNABORTED:    ::int_t = 103;
pub static ECONNREFUSED:    ::int_t = 111;
pub static ECONNRESET:      ::int_t = 104;
pub static EDEADLK:         ::int_t = 35;
pub static EDESTADDRREQ:    ::int_t = 89;
pub static EDOM:            ::int_t = 33;
pub static EDQUOT:          ::int_t = 122;
pub static EEXIST:          ::int_t = 17;
pub static EFAULT:          ::int_t = 14;
pub static EFBIG:           ::int_t = 27;
pub static EHOSTUNREACH:    ::int_t = 113;
pub static EIDRM:           ::int_t = 43;
pub static EILSEQ:          ::int_t = 84;
pub static EINPROGRESS:     ::int_t = 115;
pub static EINTR:           ::int_t = 4;
pub static EINVAL:          ::int_t = 22;
pub static EIO:             ::int_t = 5;
pub static EISCONN:         ::int_t = 106;
pub static EISDIR:          ::int_t = 21;
pub static ELOOP:           ::int_t = 40;
pub static EMFILE:          ::int_t = 24;
pub static EMLINK:          ::int_t = 31;
pub static EMSGSIZE:        ::int_t = 90;
pub static EMULTIHOP:       ::int_t = 72;
pub static ENAMETOOLONG:    ::int_t = 36;
pub static ENETDOWN:        ::int_t = 100;
pub static ENETRESET:       ::int_t = 102;
pub static ENETUNREACH:     ::int_t = 101;
pub static ENFILE:          ::int_t = 23;
pub static ENOBUFS:         ::int_t = 105;
pub static ENODATA:         ::int_t = 61;
pub static ENODEV:          ::int_t = 19;
pub static ENOENT:          ::int_t = 2;
pub static ENOEXEC:         ::int_t = 8;
pub static ENOLCK:          ::int_t = 37;
pub static ENOLINK:         ::int_t = 67;
pub static ENOMEM:          ::int_t = 12;
pub static ENOMSG:          ::int_t = 42;
pub static ENOPROTOOPT:     ::int_t = 92;
pub static ENOSPC:          ::int_t = 28;
pub static ENOSR:           ::int_t = 63;
pub static ENOSTR:          ::int_t = 60;
pub static ENOSYS:          ::int_t = 38;
pub static ENOTCONN:        ::int_t = 107;
pub static ENOTDIR:         ::int_t = 20;
pub static ENOTEMPTY:       ::int_t = 39;
pub static ENOTRECOVERABLE: ::int_t = 131;
pub static ENOTSOCK:        ::int_t = 88;
pub static ENOTSUP:         ::int_t = 95;
pub static ENOTTY:          ::int_t = 25;
pub static ENXIO:           ::int_t = 6;
pub static EOPNOTSUPP:      ::int_t = 95;
pub static EOVERFLOW:       ::int_t = 75;
pub static EOWNERDEAD:      ::int_t = 130;
pub static EPERM:           ::int_t = 1;
pub static EPIPE:           ::int_t = 32;
pub static EPROTO:          ::int_t = 71;
pub static EPROTONOSUPPORT: ::int_t = 93;
pub static EPROTOTYPE:      ::int_t = 91;
pub static ERANGE:          ::int_t = 34;
pub static EROFS:           ::int_t = 30;
pub static ESPIPE:          ::int_t = 29;
pub static ESRCH:           ::int_t = 3;
pub static ESTALE:          ::int_t = 116;
pub static ETIME:           ::int_t = 62;
pub static ETIMEDOUT:       ::int_t = 110;
pub static ETXTBSY:         ::int_t = 26;
pub static EWOULDBLOCK:     ::int_t = 11;
pub static EXDEV:           ::int_t = 18;

pub fn errno() -> &mut ::int_t {
    extern { fn __errno_location() -> *mut ::int_t; }
    unsafe { ::std::mem::transmute(__errno_location()) }
}

